name: Publish to npm
run-name: ${{ format('Publish {0} bump {1}', inputs.semver-bump, inputs.dry-run && '(dry run)' || '') }}

on:
  workflow_dispatch:
    inputs:
      package:
        description: NPM package to publish
        type: choice
        options:
          - '@eighty4/dank'
          - 'create-dank'
      semver-bump:
        description: Semver bump release type
        required: true
        type: choice
        default: prerelease
        options:
          - major
          - minor
          - patch
          - prerelease
      dry-run:
        required: false
        type: boolean

concurrency: publish

jobs:
  check-build-params:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
      - name: changelog entries
        if: ${{ inputs.semver-bump != 'prerelease' }}
        run: npx -y @eighty4/changelog@latest check
      - name: 'work_dir @eighty4/dank'
        if: ${{ inputs.package == '@eighty4/dank' }}
        run: echo "work_dir=./" > wd
      - name: work_dir create-dank
        if: ${{ inputs.package == 'create-dank' }}
        run: echo "work_dir=./create-dank" > wd
      - id: work_dir
        run: cat wd >> "$GITHUB_OUTPUT"
    outputs:
      work_dir: ${{ steps.work_dir.outputs.work_dir }}

  verify:
    uses: ./.github/workflows/ci_verify.yml
    needs: check-build-params

  create-git-tag:
    runs-on: ubuntu-latest
    needs: [check-build-params, verify]
    defaults:
      run:
        working-directory: ${{ needs.check-build-params.outputs.work_dir }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 24
      - if: ${{ inputs.dry-run }}
        run: git checkout -b "publish-dry-run-${{ github.run_number }}"
      - id: bump
        env:
          TAG_PREFIX: ${{ inputs.package == 'create-dank' && 'create-dank-' || '' }}
        run: |
          GIT_TAG=$(npm version ${{ inputs.semver-bump }} --no-git-tag-version)
          echo "version=${GIT_TAG:1}" >> "$GITHUB_OUTPUT"
          echo "tag=$TAG_PREFIX$GIT_TAG" >> "$GITHUB_OUTPUT"
      - if: inputs.semver-bump != 'prerelease'
        env:
          VERSION: ${{ steps.bump.outputs.version }}
        run: npx -y @eighty4/changelog@latest rollover "v$VERSION"
      - name: ctp
        id: push
        env:
          GIT_TAG: ${{ steps.bump.outputs.tag }}
          NPM_TAG: ${{ inputs.semver-bump == 'prerelease' && 'next' || 'latest' }}
        run: |
          git config --global user.name "Adam McKee"
          git config --global user.email "adam.be.g84d@gmail.com"
          git add package.json CHANGELOG.md
          git commit -m "publishing $GIT_TAG as @$NPM_TAG"
          git tag $GIT_TAG
      - name: git push
        if: ${{ !inputs.dry-run }}
        run: git push --atomic origin main ${{ steps.bump.outputs.tag }}
      - name: git push (dry run)
        if: ${{ inputs.dry-run }}
        run: git push --atomic origin "publish-dry-run-${{ github.run_number }}" ${{ steps.bump.outputs.tag }}
    outputs:
      tag: ${{ steps.bump.outputs.tag }}
      version: ${{ steps.bump.outputs.version }}

  npm-publish:
    runs-on: ubuntu-latest
    needs: [check-build-params, create-git-tag]
    defaults:
      run:
        working-directory: ${{ needs.check-build-params.outputs.work_dir }}
    env:
      NPM_TAG: ${{ inputs.semver-bump == 'prerelease' && 'next' || 'latest' }}
      NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          ref: ${{ needs.create-git-tag.outputs.tag }}
      - uses: actions/setup-node@v4
        with:
          node-version: 24
          registry-url: https://registry.npmjs.org
      - uses: pnpm/action-setup@v4
      - run: pnpm i
      - run: pnpm run build
      - name: publish
        if: ${{ !inputs.dry-run }}
        run: pnpm publish --access public --no-git-checks --tag $NPM_TAG
      - name: publish (dry run)
        if: ${{ inputs.dry-run }}
        run: pnpm publish --access public --no-git-checks --tag $NPM_TAG --dry-run

  create-release-notes:
    runs-on: ubuntu-latest
    needs: [check-build-params, create-git-tag, npm-publish]
    defaults:
      run:
        working-directory: ${{ needs.check-build-params.outputs.work_dir }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-tags: true
          ref: ${{ needs.create-git-tag.outputs.tag }}
      - uses: actions/setup-node@v4
        with:
          node-version: 24
      - id: gen
        env:
          CHANGELOG_TAG: ${{ inputs.semver-bump == 'prerelease' && 'Unreleased' || needs.create-git-tag.outputs.tag }}
          GIT_TAG: ${{ needs.create-git-tag.outputs.tag }}
          NPM_TAG: ${{ inputs.semver-bump == 'prerelease' && 'next' || 'latest' }}
        run: |
          PKG_NAME=$(cat package.json | jq -r ".name")
          VERSION=${GIT_TAG:1}
          echo "#### Published to npm as [$PKG_NAME](https://www.npmjs.com/package/$PKG_NAME/v/$VERSION)" >> release_notes.md
          echo >> release_notes.md
          echo "\`\`\`npm i -g $PKG_NAME@$NPM_TAG\`\`\`" >> release_notes.md
          echo >> release_notes.md

          echo "## Release notes" >> release_notes.md
          echo >> release_notes.md
          npx -y @eighty4/changelog@latest get "$CHANGELOG_TAG" >> release_notes.md
          echo >> release_notes.md

          RELEASE_NOTES=$(cat release_notes.md | base64 -w 0)
          echo "notes=$RELEASE_NOTES" >> "$GITHUB_OUTPUT"
    outputs:
      notes: ${{ steps.gen.outputs.notes }}

  create-gh-release:
    uses: ./.github/workflows/gh_release.yml
    needs: [create-git-tag, create-release-notes, npm-publish]
    permissions:
      contents: write
    secrets: inherit
    with:
      title: '${{ needs.create-git-tag.outputs.tag }}'
      release_notes: ${{ needs.create-release-notes.outputs.notes }}
      prerelease: ${{ inputs.semver-bump == 'prerelease' && 'true' || 'false' }}
      latest: ${{ inputs.semver-bump == 'prerelease' && 'false' || 'true' }}
      tag: ${{ needs.create-git-tag.outputs.tag }}

  cleanup-dry-run:
    if: always() && inputs.dry-run
    runs-on: ubuntu-latest
    needs: [create-git-tag, npm-publish, create-gh-release]
    permissions:
      contents: write
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v4
      - run: gh release delete -y ${{ needs.create-git-tag.outputs.tag }}
      - run: git push --delete origin ${{ needs.create-git-tag.outputs.tag }}
      - run: git push --delete origin "publish-dry-run-${{ github.run_number }}"
